/*
 * Weather API
 * # Introduction WeatherAPI.com provides access to weather and geo data via a JSON/XML restful API. It allows developers to create desktop, web and mobile applications using this data very easy. We provide following data through our API:     - Real-time weather - 14 day weather forecast - Historical Weather - Marine Weather and Tide Data - Future Weather (Upto 365 days ahead) - Daily and hourly intervals - 15 min interval (Enterprise only) - Astronomy - Time zone - Location data - Sports - Search or Autocomplete API - Weather Alerts - Air Quality Data - Bulk Request  # Getting Started    You need to [signup](https://www.weatherapi.com/signup.aspx) and then you can find your API key under [your account](https://www.weatherapi.com/login.aspx), and start using API right away!  Try our weather API by using interactive [API Explorer](https://www.weatherapi.com/api-explorer.aspx).  We also have SDK for popular framework/languages available on [Github](https://github.com/weatherapicom/) for quick integrations.  If you find any features missing or have any suggestions, please [contact us](https://www.weatherapi.com/contact.aspx).    # Authentication    API access to the data is protected by an API key. If at anytime, you find the API key has become vulnerable, please regenerate the key using Regenerate button next to the API key.    Authentication to the WeatherAPI.com API is provided by passing your API key as request parameter through an API .      ##  key parameter  key=YOUR API KEY  
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Ip
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-11-08T07:58:56.667Z")
public class Ip {
  @SerializedName("ip")
  private String ip = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("continent_code")
  private String continentCode = null;

  @SerializedName("continent_name")
  private String continentName = null;

  @SerializedName("country_code")
  private String countryCode = null;

  @SerializedName("country_name")
  private String countryName = null;

  @SerializedName("is_eu")
  private String isEu = null;

  @SerializedName("geoname_id")
  private Integer geonameId = null;

  @SerializedName("city")
  private String city = null;

  @SerializedName("region")
  private String region = null;

  @SerializedName("lat")
  private BigDecimal lat = null;

  @SerializedName("lon")
  private BigDecimal lon = null;

  @SerializedName("tz_id")
  private String tzId = null;

  @SerializedName("localtime_epoch")
  private Integer localtimeEpoch = null;

  @SerializedName("localtime")
  private String localtime = null;

  public Ip ip(String ip) {
    this.ip = ip;
    return this;
  }

   /**
   * Get ip
   * @return ip
  **/
  @ApiModelProperty(example = "185.249.71.82", value = "")
  public String getIp() {
    return ip;
  }

  public void setIp(String ip) {
    this.ip = ip;
  }

  public Ip type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(example = "ipv4", value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public Ip continentCode(String continentCode) {
    this.continentCode = continentCode;
    return this;
  }

   /**
   * Get continentCode
   * @return continentCode
  **/
  @ApiModelProperty(example = "EU", value = "")
  public String getContinentCode() {
    return continentCode;
  }

  public void setContinentCode(String continentCode) {
    this.continentCode = continentCode;
  }

  public Ip continentName(String continentName) {
    this.continentName = continentName;
    return this;
  }

   /**
   * Get continentName
   * @return continentName
  **/
  @ApiModelProperty(example = "Europe", value = "")
  public String getContinentName() {
    return continentName;
  }

  public void setContinentName(String continentName) {
    this.continentName = continentName;
  }

  public Ip countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @ApiModelProperty(example = "GB", value = "")
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }

  public Ip countryName(String countryName) {
    this.countryName = countryName;
    return this;
  }

   /**
   * Get countryName
   * @return countryName
  **/
  @ApiModelProperty(example = "United Kingdom", value = "")
  public String getCountryName() {
    return countryName;
  }

  public void setCountryName(String countryName) {
    this.countryName = countryName;
  }

  public Ip isEu(String isEu) {
    this.isEu = isEu;
    return this;
  }

   /**
   * Get isEu
   * @return isEu
  **/
  @ApiModelProperty(example = "false", value = "")
  public String getIsEu() {
    return isEu;
  }

  public void setIsEu(String isEu) {
    this.isEu = isEu;
  }

  public Ip geonameId(Integer geonameId) {
    this.geonameId = geonameId;
    return this;
  }

   /**
   * Get geonameId
   * @return geonameId
  **/
  @ApiModelProperty(example = "2643743", value = "")
  public Integer getGeonameId() {
    return geonameId;
  }

  public void setGeonameId(Integer geonameId) {
    this.geonameId = geonameId;
  }

  public Ip city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @ApiModelProperty(example = "London", value = "")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public Ip region(String region) {
    this.region = region;
    return this;
  }

   /**
   * Get region
   * @return region
  **/
  @ApiModelProperty(value = "")
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }

  public Ip lat(BigDecimal lat) {
    this.lat = lat;
    return this;
  }

   /**
   * Get lat
   * @return lat
  **/
  @ApiModelProperty(example = "51.5264", value = "")
  public BigDecimal getLat() {
    return lat;
  }

  public void setLat(BigDecimal lat) {
    this.lat = lat;
  }

  public Ip lon(BigDecimal lon) {
    this.lon = lon;
    return this;
  }

   /**
   * Get lon
   * @return lon
  **/
  @ApiModelProperty(example = "-0.0841", value = "")
  public BigDecimal getLon() {
    return lon;
  }

  public void setLon(BigDecimal lon) {
    this.lon = lon;
  }

  public Ip tzId(String tzId) {
    this.tzId = tzId;
    return this;
  }

   /**
   * Get tzId
   * @return tzId
  **/
  @ApiModelProperty(example = "Europe/London", value = "")
  public String getTzId() {
    return tzId;
  }

  public void setTzId(String tzId) {
    this.tzId = tzId;
  }

  public Ip localtimeEpoch(Integer localtimeEpoch) {
    this.localtimeEpoch = localtimeEpoch;
    return this;
  }

   /**
   * Get localtimeEpoch
   * @return localtimeEpoch
  **/
  @ApiModelProperty(example = "1658520645", value = "")
  public Integer getLocaltimeEpoch() {
    return localtimeEpoch;
  }

  public void setLocaltimeEpoch(Integer localtimeEpoch) {
    this.localtimeEpoch = localtimeEpoch;
  }

  public Ip localtime(String localtime) {
    this.localtime = localtime;
    return this;
  }

   /**
   * Get localtime
   * @return localtime
  **/
  @ApiModelProperty(example = "2022-07-22 21:10", value = "")
  public String getLocaltime() {
    return localtime;
  }

  public void setLocaltime(String localtime) {
    this.localtime = localtime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Ip ip = (Ip) o;
    return Objects.equals(this.ip, ip.ip) &&
        Objects.equals(this.type, ip.type) &&
        Objects.equals(this.continentCode, ip.continentCode) &&
        Objects.equals(this.continentName, ip.continentName) &&
        Objects.equals(this.countryCode, ip.countryCode) &&
        Objects.equals(this.countryName, ip.countryName) &&
        Objects.equals(this.isEu, ip.isEu) &&
        Objects.equals(this.geonameId, ip.geonameId) &&
        Objects.equals(this.city, ip.city) &&
        Objects.equals(this.region, ip.region) &&
        Objects.equals(this.lat, ip.lat) &&
        Objects.equals(this.lon, ip.lon) &&
        Objects.equals(this.tzId, ip.tzId) &&
        Objects.equals(this.localtimeEpoch, ip.localtimeEpoch) &&
        Objects.equals(this.localtime, ip.localtime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ip, type, continentCode, continentName, countryCode, countryName, isEu, geonameId, city, region, lat, lon, tzId, localtimeEpoch, localtime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Ip {\n");
    
    sb.append("    ip: ").append(toIndentedString(ip)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    continentCode: ").append(toIndentedString(continentCode)).append("\n");
    sb.append("    continentName: ").append(toIndentedString(continentName)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    countryName: ").append(toIndentedString(countryName)).append("\n");
    sb.append("    isEu: ").append(toIndentedString(isEu)).append("\n");
    sb.append("    geonameId: ").append(toIndentedString(geonameId)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    lat: ").append(toIndentedString(lat)).append("\n");
    sb.append("    lon: ").append(toIndentedString(lon)).append("\n");
    sb.append("    tzId: ").append(toIndentedString(tzId)).append("\n");
    sb.append("    localtimeEpoch: ").append(toIndentedString(localtimeEpoch)).append("\n");
    sb.append("    localtime: ").append(toIndentedString(localtime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

