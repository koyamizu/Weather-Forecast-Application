/*
 * Weather API
 * # Introduction WeatherAPI.com provides access to weather and geo data via a JSON/XML restful API. It allows developers to create desktop, web and mobile applications using this data very easy. We provide following data through our API:     - Real-time weather - 14 day weather forecast - Historical Weather - Marine Weather and Tide Data - Future Weather (Upto 365 days ahead) - Daily and hourly intervals - 15 min interval (Enterprise only) - Astronomy - Time zone - Location data - Sports - Search or Autocomplete API - Weather Alerts - Air Quality Data - Bulk Request  # Getting Started    You need to [signup](https://www.weatherapi.com/signup.aspx) and then you can find your API key under [your account](https://www.weatherapi.com/login.aspx), and start using API right away!  Try our weather API by using interactive [API Explorer](https://www.weatherapi.com/api-explorer.aspx).  We also have SDK for popular framework/languages available on [Github](https://github.com/weatherapicom/) for quick integrations.  If you find any features missing or have any suggestions, please [contact us](https://www.weatherapi.com/contact.aspx).    # Authentication    API access to the data is protected by an API key. If at anytime, you find the API key has become vulnerable, please regenerate the key using Regenerate button next to the API key.    Authentication to the WeatherAPI.com API is provided by passing your API key as request parameter through an API .      ##  key parameter  key=YOUR API KEY  
 *
 * OpenAPI spec version: 1.0.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * AlertsAlert
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2023-11-08T07:58:56.667Z")
public class AlertsAlert {
  @SerializedName("headline")
  private String headline = null;

  @SerializedName("msgtype")
  private String msgtype = null;

  @SerializedName("severity")
  private String severity = null;

  @SerializedName("urgency")
  private String urgency = null;

  @SerializedName("areas")
  private String areas = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("certainty")
  private String certainty = null;

  @SerializedName("event")
  private String event = null;

  @SerializedName("note")
  private String note = null;

  @SerializedName("effective")
  private OffsetDateTime effective = null;

  @SerializedName("expires")
  private OffsetDateTime expires = null;

  @SerializedName("desc")
  private String desc = null;

  @SerializedName("instruction")
  private String instruction = null;

  public AlertsAlert headline(String headline) {
    this.headline = headline;
    return this;
  }

   /**
   * Get headline
   * @return headline
  **/
  @ApiModelProperty(example = "NWS New York City - Upton (Long Island and New York City)", value = "")
  public String getHeadline() {
    return headline;
  }

  public void setHeadline(String headline) {
    this.headline = headline;
  }

  public AlertsAlert msgtype(String msgtype) {
    this.msgtype = msgtype;
    return this;
  }

   /**
   * Get msgtype
   * @return msgtype
  **/
  @ApiModelProperty(value = "")
  public String getMsgtype() {
    return msgtype;
  }

  public void setMsgtype(String msgtype) {
    this.msgtype = msgtype;
  }

  public AlertsAlert severity(String severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Get severity
   * @return severity
  **/
  @ApiModelProperty(value = "")
  public String getSeverity() {
    return severity;
  }

  public void setSeverity(String severity) {
    this.severity = severity;
  }

  public AlertsAlert urgency(String urgency) {
    this.urgency = urgency;
    return this;
  }

   /**
   * Get urgency
   * @return urgency
  **/
  @ApiModelProperty(value = "")
  public String getUrgency() {
    return urgency;
  }

  public void setUrgency(String urgency) {
    this.urgency = urgency;
  }

  public AlertsAlert areas(String areas) {
    this.areas = areas;
    return this;
  }

   /**
   * Get areas
   * @return areas
  **/
  @ApiModelProperty(value = "")
  public String getAreas() {
    return areas;
  }

  public void setAreas(String areas) {
    this.areas = areas;
  }

  public AlertsAlert category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(example = "Extreme temperature value", value = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public AlertsAlert certainty(String certainty) {
    this.certainty = certainty;
    return this;
  }

   /**
   * Get certainty
   * @return certainty
  **/
  @ApiModelProperty(value = "")
  public String getCertainty() {
    return certainty;
  }

  public void setCertainty(String certainty) {
    this.certainty = certainty;
  }

  public AlertsAlert event(String event) {
    this.event = event;
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @ApiModelProperty(example = "Heat Advisory", value = "")
  public String getEvent() {
    return event;
  }

  public void setEvent(String event) {
    this.event = event;
  }

  public AlertsAlert note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Get note
   * @return note
  **/
  @ApiModelProperty(value = "")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }

  public AlertsAlert effective(OffsetDateTime effective) {
    this.effective = effective;
    return this;
  }

   /**
   * Get effective
   * @return effective
  **/
  @ApiModelProperty(example = "2022-07-21T19:38:00.000Z", value = "")
  public OffsetDateTime getEffective() {
    return effective;
  }

  public void setEffective(OffsetDateTime effective) {
    this.effective = effective;
  }

  public AlertsAlert expires(OffsetDateTime expires) {
    this.expires = expires;
    return this;
  }

   /**
   * Get expires
   * @return expires
  **/
  @ApiModelProperty(example = "2022-07-25T00:00:00.000Z", value = "")
  public OffsetDateTime getExpires() {
    return expires;
  }

  public void setExpires(OffsetDateTime expires) {
    this.expires = expires;
  }

  public AlertsAlert desc(String desc) {
    this.desc = desc;
    return this;
  }

   /**
   * Get desc
   * @return desc
  **/
  @ApiModelProperty(example = "...HEAT ADVISORY REMAINS IN EFFECT UNTIL 8 PM EDT SUNDAY... * WHAT...Heat index values up to 105. * WHERE...Eastern Passaic Hudson Western Bergen Western Essex Eastern Bergen and Eastern Essex Counties. * WHEN...Until 8 PM EDT Sunday. * IMPACTS...High temperatures and high humidity may cause heat illnesses to occur.", value = "")
  public String getDesc() {
    return desc;
  }

  public void setDesc(String desc) {
    this.desc = desc;
  }

  public AlertsAlert instruction(String instruction) {
    this.instruction = instruction;
    return this;
  }

   /**
   * Get instruction
   * @return instruction
  **/
  @ApiModelProperty(example = "", value = "")
  public String getInstruction() {
    return instruction;
  }

  public void setInstruction(String instruction) {
    this.instruction = instruction;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlertsAlert alertsAlert = (AlertsAlert) o;
    return Objects.equals(this.headline, alertsAlert.headline) &&
        Objects.equals(this.msgtype, alertsAlert.msgtype) &&
        Objects.equals(this.severity, alertsAlert.severity) &&
        Objects.equals(this.urgency, alertsAlert.urgency) &&
        Objects.equals(this.areas, alertsAlert.areas) &&
        Objects.equals(this.category, alertsAlert.category) &&
        Objects.equals(this.certainty, alertsAlert.certainty) &&
        Objects.equals(this.event, alertsAlert.event) &&
        Objects.equals(this.note, alertsAlert.note) &&
        Objects.equals(this.effective, alertsAlert.effective) &&
        Objects.equals(this.expires, alertsAlert.expires) &&
        Objects.equals(this.desc, alertsAlert.desc) &&
        Objects.equals(this.instruction, alertsAlert.instruction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(headline, msgtype, severity, urgency, areas, category, certainty, event, note, effective, expires, desc, instruction);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlertsAlert {\n");
    
    sb.append("    headline: ").append(toIndentedString(headline)).append("\n");
    sb.append("    msgtype: ").append(toIndentedString(msgtype)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    urgency: ").append(toIndentedString(urgency)).append("\n");
    sb.append("    areas: ").append(toIndentedString(areas)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    certainty: ").append(toIndentedString(certainty)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    effective: ").append(toIndentedString(effective)).append("\n");
    sb.append("    expires: ").append(toIndentedString(expires)).append("\n");
    sb.append("    desc: ").append(toIndentedString(desc)).append("\n");
    sb.append("    instruction: ").append(toIndentedString(instruction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

